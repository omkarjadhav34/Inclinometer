/**
 * @file 	mpu6050.c
 * @author 	Omkar Jadhav (omjadhav@pdx.edu)
 *
 * @brief	Contains function definitions for MPU6050 sensor
 *
 * @rev	 1.0  - Created file and added definitions for initialization
 * 			  - Added basic gryo configuration (only Full Scale Range) and X axis data capture
 */
#include "mpu6050.h"
#include "xiic.h"
#include "xuartlite.h"
#include "sleep.h"

void mpu6050_init(XIic* i2c, MPU6050* mpu6050)
{
	u8 iBuf= 0x73;
	u8 oBuf;

	xil_printf("Initializing MPU6050...\n\r");

	//XIic_Recv(i2c->BaseAddress, MPU6050_ID_ADDR,(u8 *)&iBuf,1,XIIC_STOP);
	xil_printf("WHOAMI = 0x%x\n\r",iBuf);

	if ((u8)iBuf != 0)
	{
		mpu6050->address = MPU6050_ID_ADDR;
		mpu6050->sensorId = (u8)iBuf;
		mpu6050->ready = 1;
	}

	// Reset The MPU6050 Module
	oBuf = 0x00;
	//XIic_Send(i2c->BaseAddress, PWR_MGMT_1,(u8 *)&oBuf,1,XIIC_STOP);

	xil_printf("MPU6050 Initialization: %s : SensordId: 0x%x\n\r",
			((u8)iBuf > 0)? "Success" : "Fail", (u8)iBuf);
}


void mpu6050_gyroCfg(XIic* i2c, MPU6050* mpu6050)
{
	u8 iBuf;
	u8 oBuf;

	// Configure Gyro Sensitivity - Full Scale Range (default +/- 250deg/s)
	oBuf = 0x10;
	//XIic_Send(i2c->BaseAddress, GYRO_CONFIG,(u8 *)&oBuf,1,XIIC_STOP);
}


void mpu6050_getData(XIic* i2c, MPU6050* mpu6050, int *angle_actual, int axis)
{
	u8 iBuf = 0x5;
	u8 oBuf;

	// get the higher nibble data of a particular axis
	XIic_Recv(i2c->BaseAddress, (mode == SET_AXIS_X) ? GYRO_XOUT_2 :
									(mode == SET_AXIS_Y) ? GYRO_YOUT_2 : GYRO_ZOUT_2, (u8 *)&iBuf, 1, XIIC_STOP);

	*angle_actual = ((u8)iBuf) * 10;

	// get the higher nibble data of a particular axis
	XIic_Recv(i2c->BaseAddress, (mode == SET_AXIS_X) ? GYRO_XOUT_1 :
									(mode == SET_AXIS_Y) ? GYRO_YOUT_1 : GYRO_ZOUT_1, (u8 *)&iBuf, 1, XIIC_STOP);

	*angle_actual += (u8)iBuf;
}

